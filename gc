
2.导致引用计数-1的情况

》对象的别名被显式销毁，例如del a 

》对象的别名被赋予新的对象，例如a=24

》一个对象离开它的作用域，例如f函数执行完毕时，func函数中的局部变量（全局变量不会）

》对象所在的容器被销毁，或从容器中删除对象



3. 查看一个对象的引用计数 



import sys 

a = “hello world“

sys.getrefcount(a)

可以查看a对象的引用计数，但是比正常计数大1，因为调用函数的时候传入a，这会让a的引用计数+1





4.什么情况下触发python垃圾回收

》import gc 

gc.get_threshold()

输出:(700,10,10)      (当没有释放的对象个数超过700，即开始0级垃圾回收，0级垃圾回收超过10次即开始1级垃圾回收，1级垃圾回收清除包括0级垃圾，

                                  1级垃圾回收超过10次，即开始2级垃圾回收，2级垃圾回收清除包括0级，1级垃圾）

》垃圾回收机制python默认开启的，gc.disabled可关闭垃圾回收机制，当程序完成时，垃圾最后仍被回收

》当gc.disabled时，gc.collect手动开启垃圾回收机制
————————————————
版权声明：本文为CSDN博主「hzw13816194861」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/hzw13816194861/article/details/77867119
