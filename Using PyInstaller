for Windows:
  step 1:
    CMD-pip3 install PyInstaller
    CMD要以管理员身份运行
  step 2:
    Using command "python **.py" firstly,it will point out which module is not exist.
    如果python命令没有，需要添加系统路径
    右键我的电脑->属性->高级系统配置->点击高级一栏，在这里栏点开环境变量->在系统变量PATH加入python的安装路径即可，比如我的就是D:\Python27
  step 3:
    pip3 install ---(the module you need)
  step 4:
    pyinstaller -F -w **.py
    
-F, -onefile, 打包成一个exe文件
-D, -onefir,  创建一个目录，包含exe文件，但会依赖很多文件（默认选项）
-c, -console, -nonwindowed, 使用控制台，无窗口（默认）
-w, -windowed, -noconsole, 使用窗口，无控制台
-i ico_path图标




注意：在使用多进程时，一定要在if __name__=='__main__:'下添加一句multiprocessing.freeze_support()

-F, –onefile	打包一个单个文件，如果你的代码都写在一个.py文件的话，可以用这个，如果是多个.py文件就别用
-D, –onedir	打包多个文件，在dist中生成很多依赖文件，适合以框架形式编写工具代码，我个人比较推荐这样，代码易于维护
-K, –tk	在部署时包含  TCL/TK
-a, –ascii	不包含编码 . 在支持 Unicode的 python 版本上默认包含所有的编码 .
-d, –debug	产生 debug 版本的可执行文件
-w,–windowed,–noconsole	使用 Windows 子系统执行 . 当程序启动的时候不会打开命令行 ( 只对 Windows 有效 )
-c,–nowindowed,–console	
使用控制台子系统执行 ( 默认 )( 只对 Windows 有效 )

pyinstaller -c  xxxx.py

pyinstaller xxxx.py --console

-s,–strip	可执行文件和共享库将 run through strip. 注意 Cygwin的 strip 往往使普通的 win32 Dll 无法使用 .
-X, –upx	如果有 UPX 安装 ( 执行 Configure.py 时检测 ), 会压缩执行文件 (Windows 系统中的 DLL 也会 )( 参见 note)
-o DIR, –out=DIR	指定 spec 文件的生成目录 , 如果没有指定 , 而且当前目录是 PyInstaller 的根目录 , 会自动创建一个用于输出 (spec 和生成的可执行文件 ) 的目录 . 如果没有指定 , 而当前目录不是 PyInstaller 的根目录 , 则会输出到当前的目录下 .
-p DIR, –path=DIR	设置导入路径 ( 和使用 PYTHONPATH 效果相似 ). 可以用路径分割符 (Windows 使用分号 ,Linux 使用冒号 ) 分割 , 指定多个目录 . 也可以使用多个 -p 参数来设置多个导入路径，让pyinstaller自己去找程序需要的资源
–icon=<FILE.ICO>	
将 file.ico 添加为可执行文件的资源 ( 只对 Windows 系统有效 )，改变程序的图标  pyinstaller - i  ico路径 xxxxx.py

–icon=<FILE.EXE,N>	将 file.exe 的第 n 个图标添加为可执行文件的资源 ( 只对 Windows 系统有效 )
-v FILE, –version=FILE	将 verfile 作为可执行文件的版本资源 ( 只对 Windows 系统有效 )
-n NAME, –name=NAME	可选的项目 ( 产生的 spec 的 ) 名字 . 如果省略 , 第一个脚本的主文件名将作为 spec 的名字

出现w问题：
1
在执行命令 pyinstaller -D -w xxx.py打包生成.exe文件时报错：python maximum recursion depth exceeded
命令行输入：pyi-makespec -D -w xxx.py，会生成一个xxx.spec文件
找到xxx.spec这个文件给它的第二行插入下面两行代码

import sys
sys.setrecursionlimit(50000)
重新编译生成命令行输入：pyinstaller -D -w xxx.spec即可

2
'utf-8' codec can't decode byte 0xce in position 130: invalid continuation byte
控制台输入  chcp 65001
然后再打包
